#!/bin/bash

# Script to clean up git repository by removing large pack files

echo "Cleaning up git repository by removing large pack files..."

# Change to the goose-ai directory
cd /home/scott/goose-ai

# Backup the current .git config
echo "Backing up git configuration..."
mkdir -p /home/scott/git-backup
cp .git/config /home/scott/git-backup/

# Remove the .git directory
echo "Removing .git directory..."
rm -rf .git

# Initialize a new git repository
echo "Initializing new git repository..."
git init

# Restore the original remote configuration
echo "Restoring remote configuration..."
cat /home/scott/git-backup/config | grep -A2 "\[remote" > /tmp/remote-config
cat /tmp/remote-config >> .git/config

# Create a proper .gitignore file to exclude large files
echo "Creating .gitignore file..."
cat > .gitignore << 'EOF'
# Run scripts
run_cli.sh
.DS_Store
.idea
*.log
tmp/

# Generated by Cargo
debug/
target/

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# Large directories to exclude
/goose_data/
/ollama_data/
/tokenizer_files/
/target/
**/node_modules/

# Large file types
**/*.bin
**/*.gguf
**/*.onnx
**/*.safetensors
**/*.pt
**/*.pth
**/*.tf
**/*.tar
**/*.tar.gz
**/*.zip
**/*.model
**/*.weights

# Personal credentials or tokens
.env
*.token

# Backup files
*.bak
EOF

# Add scripts directory for custom scripts
mkdir -p scripts/local

# Copy important scripts
echo "Copying important scripts..."
cp /home/scott/test-goose.sh scripts/local/
cp /home/scott/push-to-github.sh scripts/local/

# Create a setup script
cat > scripts/local/setup.sh << 'EOF'
#!/bin/bash

# Setup script for customized Goose AI
echo "Setting up customized Goose AI..."

# Copy scripts to the home directory
cp scripts/local/test-goose.sh ~/
cp scripts/local/push-to-github.sh ~/

# Make scripts executable
chmod +x ~/test-goose.sh
chmod +x ~/push-to-github.sh

echo "Setup complete!"
EOF

chmod +x scripts/local/setup.sh

# Stage all files (excluding those in .gitignore)
echo "Adding files to git..."
git add .

# Commit changes
echo "Committing changes..."
git commit -m "Initial clean backup of Goose AI customizations"

echo "Git repository cleaned and ready for backup!"
echo ""
echo "To push to GitHub, run:"
echo "  git push -f origin main"
echo ""
echo "This will force-push your clean repository, replacing what's on GitHub."
echo "Would you like to push now? (y/n)"
read push_now

if [ "$push_now" == "y" ]; then
  echo "Pushing to GitHub..."
  git push -f origin main
  echo "Push complete! Check your repository at https://github.com/realDGK/goose"
else
  echo "You can push manually later with: git push -f origin main"
fi
