#!/bin/bash

# Script to create a fresh backup of Goose AI without the git history

echo "Creating a fresh backup of Goose AI..."

# Create a temporary directory
TEMP_DIR="/home/scott/goose-temp"
mkdir -p "$TEMP_DIR"

# Copy only essential files (excluding .git directory and large data)
echo "Copying essential files..."
rsync -av --exclude='.git/' --exclude='target/' --exclude='goose_data/' --exclude='ollama_data/' \
  --exclude='tokenizer_files/' --exclude='node_modules/' --exclude='*.bin' --exclude='*.gguf' \
  /home/scott/goose-ai/ "$TEMP_DIR/"

# Create scripts/local directory if it doesn't exist
mkdir -p "$TEMP_DIR/scripts/local"

# Copy important scripts from home directory
echo "Copying scripts from home directory..."
cp /home/scott/test-goose.sh "$TEMP_DIR/scripts/local/"
cp /home/scott/push-to-github.sh "$TEMP_DIR/scripts/local/"

# Create setup script
cat > "$TEMP_DIR/scripts/local/setup.sh" << 'EOF'
#!/bin/bash

# Setup script for customized Goose AI
echo "Setting up customized Goose AI..."

# Copy scripts to the home directory
cp scripts/local/test-goose.sh ~/
cp scripts/local/push-to-github.sh ~/

# Make scripts executable
chmod +x ~/test-goose.sh
chmod +x ~/push-to-github.sh

echo "Setup complete!"
EOF

chmod +x "$TEMP_DIR/scripts/local/setup.sh"

# Create a comprehensive .gitignore
cat > "$TEMP_DIR/.gitignore" << 'EOF'
# Run scripts
run_cli.sh
tokenizer_files/
.DS_Store
.idea
*.log
tmp/

# Generated by Cargo
# will have compiled files and executables
debug/
target/

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# UI
./ui/desktop/node_modules
./ui/desktop/out

# Hermit
/.hermit/
/bin/

debug_*.txt

# Docs
# Dependencies
/node_modules

# Production
/build

# Generated files
.docusaurus
.cache-loader

# Benchmark paths
benchmark-*

# Large data directories - CRITICAL TO EXCLUDE
/goose_data/
/ollama_data/
**/*.bin
**/*.gguf
**/*.onnx
**/*.safetensors
**/*.pt
**/*.pth
**/*.tf
**/*.tar
**/*.tar.gz
**/*.zip
**/*.model
**/*.weights
**/node_modules/
**/target/

# Personal credentials or tokens
.env
*.token

# Backup files
*.bak
EOF

# Copy the custom README
cp /home/scott/custom-README.md "$TEMP_DIR/README.md"

# Initialize a new git repository
echo "Initializing new git repository..."
cd "$TEMP_DIR"
git init
git add .
git commit -m "Initial backup of essential Goose AI files"

# Add remote
git remote add origin https://github.com/realDGK/goose.git

# Force push to GitHub
echo "Pushing to GitHub..."
echo "This will overwrite your GitHub repository. Continue? (y/n)"
read confirm

if [ "$confirm" == "y" ]; then
  git push -f origin main
  echo "Fresh backup complete! Your Goose AI customizations have been backed up to GitHub."
  echo "Repository URL: https://github.com/realDGK/goose"
  
  # Ask if user wants to replace their local repository
  echo "Do you want to replace your local repository with this clean one? (y/n)"
  read replace
  
  if [ "$replace" == "y" ]; then
    echo "Backing up original repository..."
    mv /home/scott/goose-ai /home/scott/goose-ai-old
    
    echo "Moving clean repository to original location..."
    mv "$TEMP_DIR" /home/scott/goose-ai
    
    echo "Repository replaced successfully!"
  else
    echo "The clean repository is available at $TEMP_DIR"
  fi
else
  echo "Operation cancelled. The clean repository is available at $TEMP_DIR"
fi
